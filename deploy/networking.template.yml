Mappings:
  Accounts:
    Dev:
      Domain: dev.brigh.id

    Prod:
      Domain: brigh.id

Resources:
  DevListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      ListenerArn: !ImportValue cfn-core:HttpsListenerArn
      Priority: 2
      Actions:
        - Type: forward
          TargetGroupArn: !Ref DevTargetGroup
      Conditions:
        - Field: host-header
          HostHeaderConfig:
            Values:
              - !FindInMap [Accounts, Dev, Domain]
              - !FindInMap [Accounts, Prod, Domain]
        - Field: path-pattern
          PathPatternConfig:
            Values:
              - /hello-world
              
  DevTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: cfn-hello-world-dev
      TargetType: ip
      VpcId: !ImportValue cfn-utilities:VpcId
      Port: 443
      Protocol: HTTP

Outputs:
  DevTargetGroupArn:
    Description: ARN of the hello world dev target group
    Value: !Ref DevTargetGroup
    Export:
      Name: !Sub ${AWS::StackName}:DevTargetGroupArn

  SecurityGroupId:
    Description: ID of the security group to use for hello world
    Value: !ImportValue cfn-utilities:WebSecurityGroupId
    Export:
      Name: !Sub ${AWS::StackName}:SecurityGroupId

  SubnetIds:
    Description: List of subnet IDs to use for hello world
    Value: !Join 
      - ","
      - !ImportValue cfn-utilities:SubnetIds
    Export:
      Name: !Sub ${AWS::StackName}:SubnetIds
    